// Date: 5/25/2014 8:22:34 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package zornco.reploidcraftenv.client.renderers;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

import org.lwjgl.opengl.GL11;

public class ModelrideArmor extends ModelBase
{
	//fields
		ModelRenderer torso;
		ModelRenderer hips;
		ModelRenderer upperArmLeftA;
		ModelRenderer lowerArmLeft;
		ModelRenderer upperArmRightA;
		ModelRenderer lowerArmRight;
		ModelRenderer backPackA;
		ModelRenderer backPackARight;
		ModelRenderer backPackALeft;
		ModelRenderer leftPedel;
		ModelRenderer rightPedel;
		ModelRenderer leftVentA;
		ModelRenderer leftVentAAngled1;
		ModelRenderer leftVentAAngled2;
		ModelRenderer rightVentA;
		ModelRenderer rightVentAAngled1;
		ModelRenderer rightVentAAngled2;
		ModelRenderer upperLegLeft;
		ModelRenderer lowerLegLeft;
		ModelRenderer footLeft;
		ModelRenderer upperLegRight;
		ModelRenderer lowerLegRight;
		ModelRenderer footRight;
		ModelRenderer seat;
		ModelRenderer chest;

		public ModelrideArmor()
		{
			textureWidth = 256;
			textureHeight = 128;
			 setTextureOffset("rightPedel.pedel", 0, 100);
			    setTextureOffset("leftPedel.pedel", 0, 100);
			    setTextureOffset("seat.seatbottom", 0, 46);
			    setTextureOffset("seat.seatback", 26, 63);
			    setTextureOffset("seat.leftStick1", 8, 57);
			    setTextureOffset("seat.leftStick2", 0, 57);
			    setTextureOffset("seat.leftStick3", 3, 62);
			    setTextureOffset("seat.rightStick1", 8, 57);
			    setTextureOffset("seat.rightStick2", 0, 57);
			    setTextureOffset("seat.rightStick3", 3, 62);
			    
			    setTextureOffset("chest.frontSide", 0, 0);
			    setTextureOffset("chest.backSide", 0, 19);
			    setTextureOffset("chest.rightSide", 0, 64);
			    setTextureOffset("chest.leftSide", 46, 64);
			    setTextureOffset("chest.base", 0, 100);
			    setTextureOffset("chest.leftNozzle", 94, 24);
			    setTextureOffset("chest.rightNozzle", 94, 24);
			    setTextureOffset("rightVentA.rightVent1", 0, 38);
			    setTextureOffset("rightVentA.rightVent2", 0, 41);
			    setTextureOffset("rightVentA.rightVent3", 26, 38);
			    setTextureOffset("rightVentA.rightVent4", 6, 41);
			    setTextureOffset("rightVentAAngled1.rightVent5", 20, 38);
			    setTextureOffset("rightVentAAngled2.rightVent6", 4, 44);
			    setTextureOffset("rightVentAAngled2.rightVent7", 4, 44);
			    setTextureOffset("rightVentAAngled2.rightVent8", 5, 44);
			    setTextureOffset("rightVentAAngled2.rightVent9", 6, 44);
			    setTextureOffset("leftVentA.leftVent1", 0, 38);
			    setTextureOffset("leftVentA.leftVent2", 0, 41);
			    setTextureOffset("leftVentA.leftVent3", 26, 38);
			    setTextureOffset("leftVentA.leftVent4", 6, 41);
			    setTextureOffset("leftVentAAngled1.leftVent5", 20, 38);
			    setTextureOffset("leftVentAAngled2.leftVent6", 4, 44);
			    setTextureOffset("leftVentAAngled2.leftVent7", 4, 44);
			    setTextureOffset("leftVentAAngled2.leftVent8", 5, 44);
			    setTextureOffset("leftVentAAngled2.leftVent9", 6, 44);
			    
			    setTextureOffset("backPackA.Mid", 72, 64);
			    setTextureOffset("backPackARight.top", 72, 78);
			    setTextureOffset("backPackARight.tank", 78, 100);
			    setTextureOffset("backPackARight.choke", 78, 114);
			    setTextureOffset("backPackARight.nozzle", 40, 54);
			    setTextureOffset("backPackALeft.top", 72, 78);
			    setTextureOffset("backPackALeft.tank", 78, 100);
			    setTextureOffset("backPackALeft.choke", 78, 114);
			    setTextureOffset("backPackALeft.nozzle", 40, 54);
			    
			    setTextureOffset("upperArmRight.shoulderRight", 58, 0);
			    setTextureOffset("upperArmRight.bicepLeftRight", 106, 0);
			    setTextureOffset("lowerArmRight.armRight", 110, 0);
			    setTextureOffset("lowerArmRight.thumbRight", 158, 0);
			    setTextureOffset("lowerArmRight.elbowRight", 158, 11);
			    
			    setTextureOffset("upperArmLeft.shoulderLeft", 58, 0);
			    setTextureOffset("upperArmLeft.bicepLeft", 106, 0);
			    setTextureOffset("lowerArmLeft.armLeft", 110, 0);
			    setTextureOffset("lowerArmLeft.thumbLeft", 158, 0);
			    setTextureOffset("lowerArmLeft.elbowLeft", 158, 11);
			    
			    setTextureOffset("hips.waist", 58, 24);
			    setTextureOffset("hips.hip1", 186, 0);
			    setTextureOffset("hips.hip2", 186, 25);
			    setTextureOffset("upperLegRight.upperLeg1Right", 32, 38);
			    setTextureOffset("upperLegRight.upperLeg2Right", 36, 38);
			    setTextureOffset("lowerLegRight.lowerLeg1Right", 64, 40);
			    setTextureOffset("lowerLegRight.lowerLeg2Right", 116, 53);
			    setTextureOffset("lowerLegRight.lowerLeg3Right", 120, 41);
			    setTextureOffset("lowerLegRight.lowerLeg4Right", 120, 41);
			    setTextureOffset("footRight.foot1Right", 76, 41);
			    setTextureOffset("footRight.foot2Right", 120, 43);
			    setTextureOffset("footRight.foot3Right", 150, 43);
			    setTextureOffset("footRight.foot4Right", 174, 43);
			    setTextureOffset("footRight.foot5Right", 174, 43);
			    setTextureOffset("upperLegLeft.upperLeg1Left", 32, 38);
			    setTextureOffset("upperLegLeft.upperLeg2Left", 36, 38);
			    setTextureOffset("lowerLegLeft.lowerLeg1Left", 64, 40);
			    setTextureOffset("lowerLegLeft.lowerLeg2Left", 116, 53);
			    setTextureOffset("lowerLegLeft.lowerLeg3Left", 120, 41);
			    setTextureOffset("lowerLegLeft.lowerLeg4Left", 120, 41);
			    setTextureOffset("footLeft.foot1Left", 76, 41);
			    setTextureOffset("footLeft.foot2Left", 120, 43);
			    setTextureOffset("footLeft.foot3Left", 150, 43);
			    setTextureOffset("footLeft.foot4Left", 174, 43);
			    setTextureOffset("footLeft.foot5Left", 174, 43);

			torso = new ModelRenderer(this, "torso");
			torso.setRotationPoint(0F, -24F, 0F);
			setRotation(torso, 0F, 0F, 0F);
				seat = new ModelRenderer(this, "seat");
				seat.setRotationPoint(0F, 0F, 0F);
				setRotation(seat, 0F, 0F, 0F);
				rightPedel = new ModelRenderer(this, "rightPedel");
				rightPedel.setRotationPoint(-2F, 8F, 4F);
				setRotation(rightPedel, -1.256637F, 0.3141593F, 0F);
				rightPedel.addBox("pedel", -3F, 12F, -3F, 6, 1, 7);
				seat.addChild(rightPedel);
				leftPedel = new ModelRenderer(this, "leftPedel");
				leftPedel.setRotationPoint(2F, 8F, 4F);
				setRotation(leftPedel, -1.256637F, -0.3141593F, 0F);
				leftPedel.mirror = true;
				leftPedel.addBox("pedel", -3F, 12F, -3F, 6, 1, 7);
				seat.addChild(leftPedel);
				seat.addBox("seatbottom", -6F, 11F, -2F, 12, 3, 8);
				seat.addBox("seatback", -6F, -4F, 6F, 12, 18, 3);
				seat.mirror = true;
				seat.addBox("leftStick1", 5F, 3F, -5F, 5, 2, 2);
				seat.addBox("leftStick2", 5F, -5F, -5F, 2, 8, 2);
				seat.mirror = false;
				seat.addBox("leftStick3", 9F, 1.5F, -6.5F, 3, 5, 5);
				seat.addBox("rightStick1", -10F, 3F, -5F, 5, 2, 2);
				seat.addBox("rightStick2", -7F, -5F, -5F, 2, 8, 2);
				seat.addBox("rightStick3", -12F, 1.5F, -6.5F, 3, 5, 5);
			torso.addChild(seat);
			
			
				chest = new ModelRenderer(this, "chest");
				chest.setRotationPoint(0F, 0F, 0F);
				setRotation(chest, 0F, 0F, 0F);
				chest.addBox("frontSide", -13F, 0F, -13F, 26, 16, 3);
				chest.addBox("backSide", -13F, 0F, 10F, 26, 16, 3);
				chest.addBox("rightSide", -13F, 0F, -10F, 3, 16, 20);
				chest.addBox("leftSide", 10F, 0F, -10F, 3, 16, 20);
				chest.addBox("base", -13F, 16F, -13F, 26, 2, 26);
				chest.mirror = true;
				chest.addBox("leftNozzle", 13F, 13.5F, -0.5F, 1, 3, 3);
				chest.mirror = false;
				chest.addBox("rightNozzle", -14F, 13.5F, -0.5F, 1, 3, 3);
					leftVentA = new ModelRenderer(this, "leftVentA");
					leftVentA.setRotationPoint(0F, 0F, 0F);
					setRotation(leftVentA, 0F, 0F, 0F);
					leftVentA.mirror = true;
					leftVentA.addBox("leftVent1", 2F, 5F, -15F, 8, 1, 2);
					leftVentA.addBox("leftVent2", 2F, 6F, -15F, 1, 2, 2);
					leftVentA.addBox("leftVent3", 9F, 6F, -15F, 1, 4, 2);
					leftVentA.addBox("leftVent4", 5F, 10F, -15F, 5, 1, 2);
						leftVentAAngled1 = new ModelRenderer(this, "leftVentAAngled1");
						leftVentAAngled1.setRotationPoint(0F, 0F, 0F);
						setRotation(leftVentAAngled1, 0F, 0F, -0.7853982F);
						leftVentAAngled1.mirror = true;
						leftVentAAngled1.addBox("leftVent5", -4F, 7F, -15F, 1, 4, 2);
					leftVentA.addChild(leftVentAAngled1);
						leftVentAAngled2 = new ModelRenderer(this, "leftVentAAngled2");
						leftVentAAngled2.setRotationPoint(0F, 0F, 0F);
						setRotation(leftVentAAngled2, 0.1858931F, 0F, 0F);
						leftVentAAngled2.mirror = true;
						leftVentAAngled2.addBox("leftVent6", 3F, 4F, -16F, 6, 0, 2);
						leftVentAAngled2.addBox("leftVent7", 3F, 5F, -16F, 6, 0, 2);
						leftVentAAngled2.addBox("leftVent8", 4F, 6F, -16F, 5, 0, 2);
						leftVentAAngled2.addBox("leftVent9", 5F, 7F, -16F, 4, 0, 2);
					leftVentA.addChild(leftVentAAngled2);
				chest.addChild(leftVentA);
					rightVentA = new ModelRenderer(this, "rightVentA");
					rightVentA.setRotationPoint(0F, 0F, 0F);
					setRotation(rightVentA, 0F, 0F, 0F);
					rightVentA.addBox("rightVent1", -10F, 5F, -15F, 8, 1, 2);
					rightVentA.addBox("rightVent2", -3F, 6F, -15F, 1, 2, 2);
					rightVentA.addBox("rightVent3", -10F, 6F, -15F, 1, 4, 2);
					rightVentA.addBox("rightVent4", -10F, 10F, -15F, 5, 1, 2);
						rightVentAAngled1 = new ModelRenderer(this, "rightVentAAngled1");
						rightVentAAngled1.setRotationPoint(0F, 0F, 0F);
						setRotation(rightVentAAngled1, 0F, 0F, 0.7853982F);
						rightVentAAngled1.addBox("rightVent5", 3F, 7F, -15F, 1, 4, 2);
					rightVentA.addChild(rightVentAAngled1);
						rightVentAAngled2 = new ModelRenderer(this, "rightVentAAngled2");
						rightVentAAngled2.setRotationPoint(0F, 0F, 0F);
						setRotation(rightVentAAngled2, 0.1858931F, 0F, 0F);
						rightVentAAngled2.addBox("rightVent6", -9F, 4F, -16F, 6, 0, 2);
						rightVentAAngled2.addBox("rightVent7", -9F, 5F, -16F, 6, 0, 2);
						rightVentAAngled2.addBox("rightVent8", -9F, 6F, -16F, 5, 0, 2);
						rightVentAAngled2.addBox("rightVent9", -9F, 7F, -16F, 4, 0, 2);
					rightVentA.addChild(rightVentAAngled2);
				chest.addChild(rightVentA);
				
				
					upperArmRightA = new ModelRenderer(this, "upperArmRight");
					upperArmRightA.setRotationPoint(-18F, -25F, 0F);
					setRotation(upperArmRightA, 0F, 0F, 0F);
					upperArmRightA.addBox("shoulderRight", -6F, -6F, -6F, 12, 12, 12);
					upperArmRightA.addBox("bicepLeftRight", -4F, 6F, -4F, 8, 16, 8);
						lowerArmRight = new ModelRenderer(this, "lowerArmRight");
						lowerArmRight.setRotationPoint(0F, 22F, 0F);
						setRotation(lowerArmRight, 0F, 0F, 0F);
						lowerArmRight.addBox("armRight", -5F, -5F, -22F, 10, 13, 28);
						lowerArmRight.addBox("thumbRight", -1F, -7F, -17F, 8, 8, 3);
						lowerArmRight.addBox("elbowRight", -4F, -4F, 6F, 8, 11, 5);
					upperArmRightA.addChild(lowerArmRight);
				//chest.addChild(upperArmRightA);
					
					upperArmLeftA = new ModelRenderer(this, "upperArmLeft");
					upperArmLeftA.setRotationPoint(18F, -25F, 0F);
					setRotation(upperArmLeftA, 0F, 0F, 0F);
					upperArmLeftA.mirror = true;
					upperArmLeftA.addBox("shoulderLeft", -6F, -6F, -6F, 12, 12, 12);
					upperArmLeftA.addBox("bicepLeft", -4F, 6F, -4F, 8, 16, 8);
						lowerArmLeft = new ModelRenderer(this, "lowerArmLeft");
						lowerArmLeft.setRotationPoint(0F, 22F, 0F);
						setRotation(lowerArmLeft, 0F, 0F, 0F);
						lowerArmLeft.mirror = true;
						lowerArmLeft.addBox("armLeft", -5F, -5F, -22F, 10, 13, 28);
						lowerArmLeft.addBox("thumbLeft", -7F, -7F, -17F, 8, 8, 3);
						lowerArmLeft.mirror = false;
						lowerArmLeft.addBox("elbowLeft", -4F, -4F, 6F, 8, 11, 5);
					upperArmLeftA.addChild(lowerArmLeft);
				//chest.addChild(upperArmLeftA);
				
				
					backPackA = new ModelRenderer(this, "backPackA");
					backPackA.setRotationPoint(0F, -24F, 0F);
					setRotation(backPackA, 0F, 0F, 0F);
					backPackA.addBox("Mid", -3F, 4F, 13F, 6, 9, 5);
						backPackARight = new ModelRenderer(this, "backPackARight");
						backPackARight.setRotationPoint(0F, 0F, 0F);
						setRotation(backPackARight, 0F, 0F, 0F);
						backPackARight.addBox("top", -8F, 2F, 14F, 4, 1, 4);
						backPackARight.addBox("tank", -9F, 3F, 13F, 6, 8, 6);
						backPackARight.addBox("choke", -8F, 11F, 14F, 4, 1, 4);
						backPackARight.addBox("nozzle", -9F, 12F, 13F, 6, 3, 6);
					backPackA.addChild(backPackARight);
						backPackALeft = new ModelRenderer(this, "backPackALeft");
						backPackALeft.setRotationPoint(0F, 0F, 0F);
						setRotation(backPackALeft, 0F, 0F, 0F);
						backPackALeft.mirror = true;
						backPackALeft.addBox("top", 4F, 2F, 14F, 4, 1, 4);
						backPackALeft.addBox("tank", 3F, 3F, 13F, 6, 8, 6);
						backPackALeft.addBox("choke", 4F, 11F, 14F, 4, 1, 4);
						backPackALeft.addBox("nozzle", 3F, 12F, 13F, 6, 3, 6);
					backPackA.addChild(backPackALeft);
				//chest.addChild(backPackA);
				
				
			torso.addChild(chest);
			hips = new ModelRenderer(this, "hips");
			hips.setRotationPoint(0F, 0F, 0F);
			setRotation(hips, 0F, 0F, 0F);
			hips.addBox("waist", -6F, -6F, -6F, 12, 4, 12);
			hips.addBox("hip1", -7F, -2F, -10F, 14, 5, 20);
			hips.addBox("hip2", -7F, 3F, -8F, 14, 6, 16);
			
			
				upperLegLeft = new ModelRenderer(this, "upperLegLeft");
				upperLegLeft.setRotationPoint(9F, 6F, 0F);
				setRotation(upperLegLeft, 0F, 0F, 0F);
				upperLegLeft.mirror = true;
				upperLegLeft.addBox("upperLeg1Left", -2F, -2F, -2F, 2, 4, 4);
				upperLegLeft.addBox("upperLeg2Left", 0F, -3F, -4F, 6, 8, 8);
					lowerLegLeft = new ModelRenderer(this, "lowerLegLeft");
					lowerLegLeft.setRotationPoint(3F, 6F, 0F);
					setRotation(lowerLegLeft, 0F, 0F, 0F);
					lowerLegLeft.mirror = true;
					lowerLegLeft.addBox("lowerLeg1Left", -4F, 0F, -4F, 8, 10, 8);
					lowerLegLeft.addBox("lowerLeg2Left", -3F, -2F, -2F, 6, 2, 4);
					lowerLegLeft.addBox("lowerLeg3Left", 3F, -3F, -3F, 2, 6, 6);
					lowerLegLeft.addBox("lowerLeg4Left", -5F, -3F, -3F, 2, 6, 6);
						footLeft = new ModelRenderer(this, "footLeft");
						footLeft.setRotationPoint(0F, 8F, 0F);
						setRotation(footLeft, 0F, 0F, 0F);
						footLeft.mirror = true;
						footLeft.addBox("foot1Left", -5F, 2F, -12F, 10, 2, 20);
						footLeft.addBox("foot2Left", -3.5F, 0F, -10F, 7, 2, 16);
						footLeft.addBox("foot3Left", -3.5F, -1F, -7F, 7, 1, 10);
						footLeft.addBox("foot4Left", 3.5F, -1F, -3F, 2, 5, 5);
						footLeft.addBox("foot5Left", -5.5F, -1F, -3F, 2, 5, 5);
					lowerLegLeft.addChild(footLeft);
				upperLegLeft.addChild(lowerLegLeft);
			hips.addChild(upperLegLeft);
				upperLegRight = new ModelRenderer(this, "upperLegRight");
				upperLegRight.setRotationPoint(-9F, 6F, 0F);
				setRotation(upperLegRight, 0F, 0F, 0F);
				upperLegRight.addBox("upperLeg1Right", 0F, -2F, -2F, 2, 4, 4);
				upperLegRight.addBox("upperLeg2Right", -6F, -3F, -4F, 6, 8, 8);
					lowerLegRight = new ModelRenderer(this, "lowerLegRight");
					lowerLegRight.setRotationPoint(-3F, 6F, 0F);
					setRotation(lowerLegRight, 0F, 0F, 0F);
					lowerLegRight.addBox("lowerLeg1Right", -4F, 0F, -4F, 8, 10, 8);
					lowerLegRight.addBox("lowerLeg2Right", -3F, -2F, -2F, 6, 2, 4);
					lowerLegRight.addBox("lowerLeg3Right", 3F, -3F, -3F, 2, 6, 6);
					lowerLegRight.addBox("lowerLeg4Right", -5F, -3F, -3F, 2, 6, 6);
						footRight = new ModelRenderer(this, "footRight");
						footRight.setRotationPoint(0F, 8F, 0F);
						setRotation(footRight, 0F, 0F, 0F);
						footRight.addBox("foot1Right", -5F, 2F, -12F, 10, 2, 20);
						footRight.addBox("foot2Right", -3.5F, 0F, -10F, 7, 2, 16);
						footRight.addBox("foot3Right", -3.5F, -1F, -7F, 7, 1, 10);
						footRight.addBox("foot4Right", 3.5F, -1F, -3F, 2, 5, 5);
						footRight.addBox("foot5Right", -5.5F, -1F, -3F, 2, 5, 5);
					lowerLegRight.addChild(footRight);
				upperLegRight.addChild(lowerLegRight);
			hips.addChild(upperLegRight);
		}

		public void renderTorso(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
		{
			super.render(entity, f, f1, f2, f3, f4, f5);
			setRotationAngles(f, f1, f2, f3, f4, f5, entity);
			//upperArmLeftA.isHidden = true;
			upperArmRightA.isHidden = true;
			//backPackA.isHidden = true;
			hips.isHidden = true;
			torso.render(f5);
		}

		public void renderHips(float f5) {
			hips.isHidden = false;
			hips.render(f5);
		}

		public void renderArmLeftA(float f5) {
			upperArmLeftA.isHidden = false;
			upperArmLeftA.render(f5);
		}

		public void renderArmRightA(float f5) {
			upperArmRightA.isHidden = false;
			upperArmRightA.render(f5);
		}

		public void renderBackPackA(float f5) {
			backPackA.isHidden = false;
			backPackA.render(f5);
		}

		private void setRotation(ModelRenderer model, float x, float y, float z)
		{
			model.rotateAngleX = x;
			model.rotateAngleY = y;
			model.rotateAngleZ = z;
		}

		public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
		{
			super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
			float inOut = (float)(Math.cos((double)(f1 * (float)Math.PI / 128F ))*4F + 4F);
			if(inOut > 1F) inOut = 1F;
			if(inOut < 0F) inOut = 0F;
			//System.out.println(f);
			float DEG_TO_RAD = (float)Math.PI/180F;



			float f7 = (float)(Math.sin((double)(f1 * (float)Math.PI * 0.2F )))/4f * f;
			float f8 = (float)(Math.cos((double)(f1 * (float)Math.PI * 0.2F )))/4f * f;
			float f9 = (float)(Math.cos((double)(f1 * (float)Math.PI * 0.4F )))/4f * f;
			float f10 = (float)(Math.sin((double)(f2 * (float)Math.PI +0.75F)))*0.7375F-0.5F;
			//System.out.println(f10);
			GL11.glTranslatef(0.0F, -f9/5F-(f10*0.6325F)-0.01F, 0F);
			setRotation(chest, 0F, f7/2, 0F);
			setRotation(upperArmRightA, f7, 0F, 0.2F);
			setRotation(lowerArmRight, -f7, 0F, 0F);
			setRotation(upperArmLeftA, -f7, 0F, -0.2F);
			setRotation(lowerArmLeft, f7, 0F, 0F);
			float f11 = (float)(Math.sin((double)(f1 * (float)Math.PI * 0.2F )))/4f * f;
			setRotation(upperLegRight, 30F*DEG_TO_RAD-(f2*160F*DEG_TO_RAD), 0F, 0F);
			setRotation(lowerLegRight, -60F*DEG_TO_RAD+(f2*140F*DEG_TO_RAD), 0F, 0F);
			setRotation(footRight, 30F*DEG_TO_RAD+(f2*20F*DEG_TO_RAD), 0F, 0F);
			upperLegRight.setRotationPoint(-9F, -f8*10F+4F, -f11*20F);
			setRotation(upperLegLeft, 30F*DEG_TO_RAD-(f2*160F*DEG_TO_RAD), 0F, 0F);
			setRotation(lowerLegLeft, -60F*DEG_TO_RAD+(f2*140F*DEG_TO_RAD), 0F, 0F);
			setRotation(footLeft, 30F*DEG_TO_RAD+(f2*20F*DEG_TO_RAD), 0F, 0F);
			upperLegLeft.setRotationPoint(9F, f8*10F+4F, f11*20F);
		}

	}
